package climat.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Action = 0;
  public static final int Annotation = 1;
  public static final int AnnotationSection = 2;
  public static final int Constant = 3;
  public static final int CustomScriptAction = 4;
  public static final int InterpolationTemplatePiece = 5;
  public static final int JavaScriptAction = 6;
  public static final int Parameter = 7;
  public static final int Referenceable = 8;
  public static final int RootToolchain = 9;
  public static final int ShellAction = 10;
  public static final int StringTemplatePiece = 11;
  public static final int TemplatePiece = 12;
  public static final int Toolchain = 13;
  public static final int ToolchainBody = 14;
  public static final int ToolchainSignature = 15;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x73bee2cc69694dd7L, 0xabeb6acc8e6703a8L);
    builder.put(0x17380d383dde6703L, Action);
    builder.put(0x572def6ab65dfe4dL, Annotation);
    builder.put(0x572def6ab66288ffL, AnnotationSection);
    builder.put(0x572def6ab654f578L, Constant);
    builder.put(0x17380d383ddf3596L, CustomScriptAction);
    builder.put(0x572def6ab655ab36L, InterpolationTemplatePiece);
    builder.put(0x17380d383dde6706L, JavaScriptAction);
    builder.put(0x5db90e988aaf5f1eL, Parameter);
    builder.put(0x5db90e988abe43d1L, Referenceable);
    builder.put(0x572def6ab654f56dL, RootToolchain);
    builder.put(0x5db90e988aad407bL, ShellAction);
    builder.put(0x572def6ab655ab33L, StringTemplatePiece);
    builder.put(0x572def6ab655ab32L, TemplatePiece);
    builder.put(0x572def6ab655c228L, Toolchain);
    builder.put(0x572def6ab6628906L, ToolchainBody);
    builder.put(0x5db90e988aaff613L, ToolchainSignature);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
