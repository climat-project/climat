package climat.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.EnumerationDescriptorBase;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import jetbrains.mps.lang.smodel.EnumerationLiteralsIndex;
import java.util.List;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;

public class EnumerationDescriptor_ParameterType extends EnumerationDescriptorBase {

  public EnumerationDescriptor_ParameterType() {
    super(0x73bee2cc69694dd7L, 0xabeb6acc8e6703a8L, 0x5db90e988ab86fc5L, "ParameterType", "r:a703dee7-679c-4011-a20a-7f09be120d3f(climat.structure)/6753445164543930309");
  }

  private final EnumerationDescriptor.MemberDescriptor myMember_arg_0 = new EnumerationDescriptor.MemberDescriptor("arg", "arg", 0x5db90e988ab86fc6L, "r:a703dee7-679c-4011-a20a-7f09be120d3f(climat.structure)/6753445164543930310");
  private final EnumerationDescriptor.MemberDescriptor myMember_flag_0 = new EnumerationDescriptor.MemberDescriptor("flag", "flag", 0x5db90e988ab86fc7L, "r:a703dee7-679c-4011-a20a-7f09be120d3f(climat.structure)/6753445164543930311");

  private final EnumerationLiteralsIndex myIndex = EnumerationLiteralsIndex.build(0x73bee2cc69694dd7L, 0xabeb6acc8e6703a8L, 0x5db90e988ab86fc5L, 0x5db90e988ab86fc6L, 0x5db90e988ab86fc7L);
  private final List<EnumerationDescriptor.MemberDescriptor> myMembers = new EnumerationDescriptorBase.MembersList(myIndex, myMember_arg_0, myMember_flag_0);

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getDefault() {
    return null;
  }

  @NotNull
  @Override
  public List<EnumerationDescriptor.MemberDescriptor> getMembers() {
    return myMembers;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(@Nullable String memberName) {
    if (memberName == null) {
      return null;
    }
    switch (memberName) {
      case "arg":
        return myMember_arg_0;
      case "flag":
        return myMember_flag_0;
    }
    return null;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(long idValue) {
    int index = myIndex.index(idValue);
    if (index == -1) {
      return null;
    }
    return myMembers.get(index);
  }
}
