package climat.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.menus.substitute.SubstituteMenuBase;
import jetbrains.mps.lang.editor.menus.EditorMenuDescriptorBase;
import jetbrains.mps.smodel.SNodePointer;
import org.jetbrains.annotations.NotNull;
import java.util.List;
import jetbrains.mps.lang.editor.menus.MenuPart;
import jetbrains.mps.openapi.editor.menus.substitute.SubstituteMenuItem;
import jetbrains.mps.openapi.editor.menus.substitute.SubstituteMenuContext;
import java.util.ArrayList;
import jetbrains.mps.lang.editor.menus.substitute.ConstraintsFilteringSubstituteMenuPartDecorator;
import jetbrains.mps.lang.editor.menus.substitute.ReferenceScopeSubstituteMenuPart;
import jetbrains.mps.lang.editor.menus.ConceptMenusPart;
import java.util.Collection;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.editor.menus.substitute.DefaultSubstituteMenuLookup;
import jetbrains.mps.smodel.language.LanguageRegistry;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SReferenceLink;

public class InterpolationTemplatePiece_SubstituteMenu extends SubstituteMenuBase {
  public InterpolationTemplatePiece_SubstituteMenu() {
    super(false, new EditorMenuDescriptorBase("default substitute menu for InterpolationTemplatePiece. Generated from implicit smart reference attribute.", new SNodePointer("r:a703dee7-679c-4011-a20a-7f09be120d3f(climat.structure)", "6281940296856349494")));
  }
  @NotNull
  @Override
  protected List<MenuPart<SubstituteMenuItem, SubstituteMenuContext>> getParts(final SubstituteMenuContext _context) {
    List<MenuPart<SubstituteMenuItem, SubstituteMenuContext>> result = new ArrayList<MenuPart<SubstituteMenuItem, SubstituteMenuContext>>();
    result.add(new ConstraintsFilteringSubstituteMenuPartDecorator(new SMP_ReferenceScope_26h0j8_a(), CONCEPTS.InterpolationTemplatePiece$yu));
    result.add(new SMP_Subconcepts_26h0j8_b());
    return result;
  }

  public class SMP_ReferenceScope_26h0j8_a extends ReferenceScopeSubstituteMenuPart {

    public SMP_ReferenceScope_26h0j8_a() {
      super(CONCEPTS.InterpolationTemplatePiece$yu, LINKS.reference$Vi1I, new EditorMenuDescriptorBase("reference scope substitute menu part", null));
    }

  }
  public class SMP_Subconcepts_26h0j8_b extends ConceptMenusPart<SubstituteMenuItem, SubstituteMenuContext> {
    public SMP_Subconcepts_26h0j8_b() {
      super(new EditorMenuDescriptorBase("include menus for all the direct subconcepts of " + "InterpolationTemplatePiece", null));
    }

    @Override
    protected Collection<SAbstractConcept> getConcepts(final SubstituteMenuContext _context) {
      return getDirectDescendants(_context, CONCEPTS.InterpolationTemplatePiece$yu);
    }

    @Override
    protected Collection<SubstituteMenuItem> createItemsForConcept(SubstituteMenuContext context, SAbstractConcept concept) {
      return context.createItems(new DefaultSubstituteMenuLookup(LanguageRegistry.getInstance(context.getEditorContext().getRepository()), concept));
    }
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept InterpolationTemplatePiece$yu = MetaAdapterFactory.getConcept(0x73bee2cc69694dd7L, 0xabeb6acc8e6703a8L, 0x572def6ab655ab36L, "climat.structure.InterpolationTemplatePiece");
  }

  private static final class LINKS {
    /*package*/ static final SReferenceLink reference$Vi1I = MetaAdapterFactory.getReferenceLink(0x73bee2cc69694dd7L, 0xabeb6acc8e6703a8L, 0x572def6ab655ab36L, 0x5db90e988abe43d8L, "reference");
  }
}
